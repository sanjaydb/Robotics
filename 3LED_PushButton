#include "ESP8266WiFi.h"


//const char* ssid = "TRIZEUS PVT.LTD.";
//const char* password =  "9702916174";

const char* ssid = "San.Gdb";
const char* password =  "c716a519e648";


WiFiServer wifiServer(80);
 
int LED1 = D1;
int LED2 = D2;
int LED3 = D3;

//int led = D1;     // LED pin
int button = 16; // push button is connected
int temp = 0;    // temporary variable for reading the button pin statu



 
void processReceivedValue(char command)
{
   if(command == '1')
   { 
    digitalWrite(LED1, HIGH); 
   }
   else if(command == '2')
   { 
    digitalWrite(LED1, LOW);
   }

  if(command == '3')
   { 
    digitalWrite(LED2, HIGH); 
   }
   else if(command == '4')
   { 
    digitalWrite(LED2, LOW);
   }

   
  if(command == '5')
   { 
    digitalWrite(LED3, HIGH); 
   }
   else if(command == '6')
   { 
    digitalWrite(LED3, LOW);
   }

   return;
}
 
void setup() {
 
  Serial.begin(115200);
   delay(1000);
   WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
 
  Serial.println("Connected to the WiFi network");
  Serial.println(WiFi.localIP());
 
  wifiServer.begin();
 
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  
  digitalWrite(LED1, LOW);
  digitalWrite(LED2, LOW);
  digitalWrite(LED3, LOW);

  
  //pinMode(led, OUTPUT);   // declare LED as output
  pinMode(button, INPUT); // declare push button as input

    
}
 
void loop() {
 
  WiFiClient client = wifiServer.available();
 
  if (client) {
 
    while (client.connected()) 
    {
       while (client.available()>0) 
       {
        char c = client.read();
           processReceivedValue(c);
        Serial.write(c);
        client.println("Replay from ESP");

         temp = digitalRead(button);
            if (temp == HIGH) {
        digitalWrite(LED1, HIGH);
        Serial.println("LED Turned ON");
        delay(10);
       }
     else {
        digitalWrite(LED1, LOW);
        Serial.println("LED Turned OFF");
        delay(10);
       }
       
      }
       delay(10);
    }
 
    client.stop();
    Serial.println("Client disconnected");
 
  }
}
